-- WARNING: This deletes the old database and all its data. Copy paste this if you have existing grading_app database


DROP DATABASE IF EXISTS grading_app;
CREATE DATABASE grading_app CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;
USE grading_app;

-- USERS (one table for all roles)
CREATE TABLE users (
  id INT AUTO_INCREMENT PRIMARY KEY,
  email VARCHAR(190) NOT NULL UNIQUE,
  password_hash VARCHAR(255) NULL,
  role ENUM('admin','registrar','professor','student') NOT NULL DEFAULT 'student',
  name_first VARCHAR(100),
  name_last VARCHAR(100),
  status ENUM('ACTIVE','INACTIVE') DEFAULT 'ACTIVE',
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- STUDENT & PROFESSOR profiles (link to users)
CREATE TABLE students (
  id INT AUTO_INCREMENT PRIMARY KEY,
  user_id INT UNIQUE,
  student_id VARCHAR(50) UNIQUE,
  year_level ENUM('1','2','3','4') NOT NULL,
  section VARCHAR(50),
  status ENUM('Regular','Irregular') DEFAULT 'Regular',
  FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE SET NULL
);

CREATE TABLE professors (
  id INT AUTO_INCREMENT PRIMARY KEY,
  user_id INT UNIQUE,
  professor_id VARCHAR(50) UNIQUE,
  FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE SET NULL
);

-- COURSES / SECTIONS / ENROLLMENTS
CREATE TABLE courses (
  id INT AUTO_INCREMENT PRIMARY KEY,
  code VARCHAR(50) UNIQUE,
  title VARCHAR(190) NOT NULL,
  units INT DEFAULT 3
);

CREATE TABLE sections (
  id INT AUTO_INCREMENT PRIMARY KEY,
  name VARCHAR(50) NOT NULL,       -- e.g., BSIT-3A
  year_level ENUM('1','2','3','4') NOT NULL,
  term VARCHAR(50),                -- e.g., 1st Sem SY 2025-2026
  course_id INT NULL,
  FOREIGN KEY (course_id) REFERENCES courses(id) ON DELETE SET NULL
);

CREATE TABLE enrollments (
  id INT AUTO_INCREMENT PRIMARY KEY,
  section_id INT NOT NULL,
  student_id INT NOT NULL,         -- FK to students.id (not users.id)
  FOREIGN KEY (section_id) REFERENCES sections(id) ON DELETE CASCADE,
  FOREIGN KEY (student_id) REFERENCES students(id) ON DELETE CASCADE
);

-- GRADING
CREATE TABLE grading_sheets (
  id INT AUTO_INCREMENT PRIMARY KEY,
  section_id INT NOT NULL,
  professor_id INT NOT NULL,       -- FK to professors.id
  status ENUM('draft','submitted','locked','reopened') DEFAULT 'draft',
  deadline_at DATETIME NULL,
  submitted_at DATETIME NULL,
  FOREIGN KEY (section_id) REFERENCES sections(id) ON DELETE CASCADE,
  FOREIGN KEY (professor_id) REFERENCES professors(id) ON DELETE CASCADE
);

CREATE TABLE grade_components (
  id INT AUTO_INCREMENT PRIMARY KEY,
  section_id INT NOT NULL,
  name VARCHAR(50) NOT NULL,       -- Exams, Quizzes, Activities, Recitation, Attendance
  weight DECIMAL(5,2) NOT NULL,    -- e.g., 30.00
  FOREIGN KEY (section_id) REFERENCES sections(id) ON DELETE CASCADE
);

CREATE TABLE grade_items (
  id INT AUTO_INCREMENT PRIMARY KEY,
  component_id INT NOT NULL,
  title VARCHAR(100) NOT NULL,     -- e.g., Quiz 1
  total_points DECIMAL(7,2) NOT NULL,
  FOREIGN KEY (component_id) REFERENCES grade_components(id) ON DELETE CASCADE
);

CREATE TABLE grades (
  id INT AUTO_INCREMENT PRIMARY KEY,
  grade_item_id INT NOT NULL,
  student_id INT NOT NULL,         -- FK to students.id
  score DECIMAL(7,2) NOT NULL,
  FOREIGN KEY (grade_item_id) REFERENCES grade_items(id) ON DELETE CASCADE,
  FOREIGN KEY (student_id) REFERENCES students(id) ON DELETE CASCADE
);

-- EDIT & ACTIVITY LOGS / DOCUMENT REQUESTS
CREATE TABLE edit_requests (
  id INT AUTO_INCREMENT PRIMARY KEY,
  grading_sheet_id INT NOT NULL,
  professor_id INT NOT NULL,
  reason TEXT,
  status ENUM('pending','approved','denied') DEFAULT 'pending',
  decided_by INT NULL,             -- registrar/admin user id
  decided_at DATETIME NULL,
  FOREIGN KEY (grading_sheet_id) REFERENCES grading_sheets(id) ON DELETE CASCADE,
  FOREIGN KEY (professor_id) REFERENCES professors(id) ON DELETE CASCADE
);

CREATE TABLE activity_logs (
  id INT AUTO_INCREMENT PRIMARY KEY,
  user_id INT NULL,
  action VARCHAR(100) NOT NULL,
  details TEXT,
  ip VARCHAR(45),
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE SET NULL
);

CREATE TABLE document_requests (
  id INT AUTO_INCREMENT PRIMARY KEY,
  student_id INT NOT NULL,
  type ENUM('report','certificate') NOT NULL,
  purpose VARCHAR(190),
  status ENUM('pending','scheduled','ready','released') DEFAULT 'pending',
  scheduled_at DATETIME NULL,
  released_at DATETIME NULL,
  FOREIGN KEY (student_id) REFERENCES students(id) ON DELETE CASCADE
);
